{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akau1902\\\\Web Development\\\\fleet-management-system\\\\client\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport axios from \"axios\";\nimport jwtDecode from \"jwt-decode\";\nimport { refreshToken } from \"./components/auth/RefreshToken\"; //import { refreshToken } from \"./components/utilities/Helpers\";\n// gets triggered before each axios request\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.interceptors.request.use(async config => {\n  if ( // !config.url.includes(\"user-auth\") &&\n  !config.url.includes(\"refresh-token\") && !config.url.includes(\"login\")) {\n    let currentDate = new Date();\n    const decodedToken = jwtDecode(JSON.parse(window.localStorage.getItem(\"auth\")).accessToken); //  console.log(\"Inside interceptor\");\n\n    if (decodedToken.exp * 1000 < currentDate.getTime()) {\n      // get new tokens\n      const data = await refreshToken(); //window.localStorage.setItem(\"auth\", JSON.stringify(data));\n\n      config.headers[\"authorization\"] = \"Bearer \" + data.accessToken;\n    } //if\n    else {\n      config.headers[\"authorization\"] = \"Bearer \" + JSON.parse(window.localStorage.getItem(\"auth\")).accessToken;\n    }\n  } //if\n\n\n  return config;\n}, error => {\n  console.log(error);\n  return Promise.reject(error);\n});\nReactDOM.render(\n/*#__PURE__*/\n\n/* <React.StrictMode> */\n_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 45,\n  columnNumber: 3\n}, this),\n/* </React.StrictMode> */\ndocument.getElementById(\"root\")); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals","map":{"version":3,"sources":["C:/Users/akau1902/Web Development/fleet-management-system/client/src/index.js"],"names":["React","ReactDOM","App","axios","jwtDecode","refreshToken","interceptors","request","use","config","url","includes","currentDate","Date","decodedToken","JSON","parse","window","localStorage","getItem","accessToken","exp","getTime","data","headers","error","console","log","Promise","reject","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,YAAT,QAA6B,gCAA7B,C,CACA;AAEA;;;AACAF,KAAK,CAACG,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACE,MAAOC,MAAP,IAAkB;AAChB,OACE;AACA,GAACA,MAAM,CAACC,GAAP,CAAWC,QAAX,CAAoB,eAApB,CAAD,IACA,CAACF,MAAM,CAACC,GAAP,CAAWC,QAAX,CAAoB,OAApB,CAHH,EAIE;AACA,QAAIC,WAAW,GAAG,IAAIC,IAAJ,EAAlB;AACA,UAAMC,YAAY,GAAGV,SAAS,CAC5BW,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,MAA5B,CAAX,EAAgDC,WADpB,CAA9B,CAFA,CAKA;;AACA,QAAIN,YAAY,CAACO,GAAb,GAAmB,IAAnB,GAA0BT,WAAW,CAACU,OAAZ,EAA9B,EAAqD;AACnD;AACA,YAAMC,IAAI,GAAG,MAAMlB,YAAY,EAA/B,CAFmD,CAGnD;;AACAI,MAAAA,MAAM,CAACe,OAAP,CAAe,eAAf,IAAkC,YAAYD,IAAI,CAACH,WAAnD;AACD,KALD,CAKE;AALF,SAMK;AACHX,MAAAA,MAAM,CAACe,OAAP,CAAe,eAAf,IACE,YACAT,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,MAA5B,CAAX,EAAgDC,WAFlD;AAGD;AACF,GAtBe,CAsBd;;;AACF,SAAOX,MAAP;AACD,CAzBH,EA0BGgB,KAAD,IAAW;AACTC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SAAOG,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACD,CA7BH;AAgCAxB,QAAQ,CAAC6B,MAAT;AAAA;;AACE;AACA,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAFF;AAGE;AACAC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF,E,CAOA;AACA;AACA","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport axios from \"axios\";\nimport jwtDecode from \"jwt-decode\";\nimport { refreshToken } from \"./components/auth/RefreshToken\";\n//import { refreshToken } from \"./components/utilities/Helpers\";\n\n// gets triggered before each axios request\naxios.interceptors.request.use(\n  async (config) => {\n    if (\n      // !config.url.includes(\"user-auth\") &&\n      !config.url.includes(\"refresh-token\") &&\n      !config.url.includes(\"login\")\n    ) {\n      let currentDate = new Date();\n      const decodedToken = jwtDecode(\n        JSON.parse(window.localStorage.getItem(\"auth\")).accessToken\n      );\n      //  console.log(\"Inside interceptor\");\n      if (decodedToken.exp * 1000 < currentDate.getTime()) {\n        // get new tokens\n        const data = await refreshToken();\n        //window.localStorage.setItem(\"auth\", JSON.stringify(data));\n        config.headers[\"authorization\"] = \"Bearer \" + data.accessToken;\n      } //if\n      else {\n        config.headers[\"authorization\"] =\n          \"Bearer \" +\n          JSON.parse(window.localStorage.getItem(\"auth\")).accessToken;\n      }\n    } //if\n    return config;\n  },\n  (error) => {\n    console.log(error);\n    return Promise.reject(error);\n  }\n);\n\nReactDOM.render(\n  /* <React.StrictMode> */\n  <App />,\n  /* </React.StrictMode> */\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"]},"metadata":{},"sourceType":"module"}