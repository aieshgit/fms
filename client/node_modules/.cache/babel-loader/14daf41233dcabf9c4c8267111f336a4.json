{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akau1902\\\\Web Development\\\\fleet-management-system\\\\client\\\\src\\\\components\\\\pages\\\\OdoReadings.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport BsTable from \"../layouts/BsTable\";\nimport { textFilter } from \"react-bootstrap-table2-filter\";\nimport UserAuth from \"../auth/UserAuth\";\nimport { Link } from \"react-router-dom\";\nimport { customSort } from \"../utilities/Helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst OdoReadings = () => {\n  _s();\n\n  const columns = [{\n    dataField: \"odoNum\",\n    text: \"Odometer#\",\n    sort: true,\n\n    /*       sortFunc: (a, b, order, dataField) => {\r\n      if (order === \"asc\" || !order) {\r\n        return b.localeCompare(\r\n          a,\r\n          navigator.languages[0] || navigator.language,\r\n          { numeric: true, ignorePunctuation: true }\r\n        );\r\n      }\r\n      return a.localeCompare(\r\n        b,\r\n        navigator.languages[0] || navigator.language,\r\n        { numeric: true, ignorePunctuation: true }\r\n      );\r\n    }, */\n    sortFunc: customSort,\n    //formatter: drillDown,\n    formatter: (cell, row) => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `odoReadings/${row.id}`,\n          children: row.odoNum\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)\n      }, void 0, false);\n    }\n  }, {\n    dataField: \"regNum\",\n    text: \"Registration\",\n    filter: textFilter()\n  }, {\n    dataField: \"readingDate\",\n    text: \"Date\"\n  }, {\n    dataField: \"initialReading\",\n    text: \"Initial Reading\"\n  }, {\n    dataField: \"finalReading\",\n    text: \"Final Reading\"\n  }, {\n    dataField: \"mileage\",\n    text: \"Mileage\"\n  }];\n  const [odoReadings, setOdoReadings] = useState([]);\n  useEffect(() => {\n    loadOdoReadings();\n  }, []);\n\n  const loadOdoReadings = async () => {\n    const result = await axios.get(\"http://localhost:5000/odoReadings\"); // console.log(result);\n    //  result.data.map((item) => delete item.id);\n\n    setOdoReadings(result.data);\n  }; // delete odo reading\n\n  /*   const deleteOdoReading = async (id) => {\r\n    await axios.delete(`http://localhost:5000/odoReadings/${id}`);\r\n    loadOdometer();\r\n  }; */\n\n\n  const defaultSorted = [{\n    dataField: \"odoNum\",\n    // if dataField is not match to any column you defined, it will be ignored.\n    order: \"asc\" // desc or asc\n\n  }];\n  return /*#__PURE__*/_jsxDEV(UserAuth, {\n    children: /*#__PURE__*/_jsxDEV(BsTable, {\n      sObject: \"OdoReadings\",\n      tableTitle: \"Odometer\",\n      columns: columns,\n      tableData: odoReadings,\n      addButton: \"Add Reading\",\n      defaultSorted: defaultSorted\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n\n_s(OdoReadings, \"vMrDds10kN8qHP0wux3+bdq/P6Y=\");\n\n_c = OdoReadings;\nexport default OdoReadings;\n\nvar _c;\n\n$RefreshReg$(_c, \"OdoReadings\");","map":{"version":3,"sources":["C:/Users/akau1902/Web Development/fleet-management-system/client/src/components/pages/OdoReadings.js"],"names":["React","useState","useEffect","axios","BsTable","textFilter","UserAuth","Link","customSort","OdoReadings","columns","dataField","text","sort","sortFunc","formatter","cell","row","id","odoNum","filter","odoReadings","setOdoReadings","loadOdoReadings","result","get","data","defaultSorted","order"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,UAAT,QAA2B,+BAA3B;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,UAAT,QAA2B,sBAA3B;;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAMC,OAAO,GAAG,CACd;AACEC,IAAAA,SAAS,EAAE,QADb;AAEEC,IAAAA,IAAI,EAAE,WAFR;AAGEC,IAAAA,IAAI,EAAE,IAHR;;AAIE;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACMC,IAAAA,QAAQ,EAAEN,UAlBZ;AAmBE;AACAO,IAAAA,SAAS,EAAE,CAACC,IAAD,EAAOC,GAAP,KAAe;AACxB,0BACE;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,eAAcA,GAAG,CAACC,EAAG,EAAhC;AAAA,oBAAoCD,GAAG,CAACE;AAAxC;AAAA;AAAA;AAAA;AAAA;AADF,uBADF;AAKD;AA1BH,GADc,EA6Bd;AACER,IAAAA,SAAS,EAAE,QADb;AAEEC,IAAAA,IAAI,EAAE,cAFR;AAGEQ,IAAAA,MAAM,EAAEf,UAAU;AAHpB,GA7Bc,EAkCd;AACEM,IAAAA,SAAS,EAAE,aADb;AAEEC,IAAAA,IAAI,EAAE;AAFR,GAlCc,EAsCd;AACED,IAAAA,SAAS,EAAE,gBADb;AAEEC,IAAAA,IAAI,EAAE;AAFR,GAtCc,EA0Cd;AACED,IAAAA,SAAS,EAAE,cADb;AAEEC,IAAAA,IAAI,EAAE;AAFR,GA1Cc,EA8Cd;AACED,IAAAA,SAAS,EAAE,SADb;AAEEC,IAAAA,IAAI,EAAE;AAFR,GA9Cc,CAAhB;AAoDA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCrB,QAAQ,CAAC,EAAD,CAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,eAAe;AAChB,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,eAAe,GAAG,YAAY;AAClC,UAAMC,MAAM,GAAG,MAAMrB,KAAK,CAACsB,GAAN,CAAU,mCAAV,CAArB,CADkC,CAElC;AACA;;AACAH,IAAAA,cAAc,CAACE,MAAM,CAACE,IAAR,CAAd;AACD,GALD,CA3DwB,CAkExB;;AACA;AACF;AACA;AACA;;;AAEE,QAAMC,aAAa,GAAG,CACpB;AACEhB,IAAAA,SAAS,EAAE,QADb;AACuB;AACrBiB,IAAAA,KAAK,EAAE,KAFT,CAEgB;;AAFhB,GADoB,CAAtB;AAOA,sBACE,QAAC,QAAD;AAAA,2BACE,QAAC,OAAD;AACE,MAAA,OAAO,EAAC,aADV;AAEE,MAAA,UAAU,EAAC,UAFb;AAGE,MAAA,OAAO,EAAElB,OAHX;AAIE,MAAA,SAAS,EAAEW,WAJb;AAKE,MAAA,SAAS,EAAC,aALZ;AAME,MAAA,aAAa,EAAEM;AANjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA3FD;;GAAMlB,W;;KAAAA,W;AA6FN,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport BsTable from \"../layouts/BsTable\";\r\nimport { textFilter } from \"react-bootstrap-table2-filter\";\r\nimport UserAuth from \"../auth/UserAuth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { customSort } from \"../utilities/Helpers\";\r\n\r\nconst OdoReadings = () => {\r\n  const columns = [\r\n    {\r\n      dataField: \"odoNum\",\r\n      text: \"Odometer#\",\r\n      sort: true,\r\n      /*       sortFunc: (a, b, order, dataField) => {\r\n        if (order === \"asc\" || !order) {\r\n          return b.localeCompare(\r\n            a,\r\n            navigator.languages[0] || navigator.language,\r\n            { numeric: true, ignorePunctuation: true }\r\n          );\r\n        }\r\n        return a.localeCompare(\r\n          b,\r\n          navigator.languages[0] || navigator.language,\r\n          { numeric: true, ignorePunctuation: true }\r\n        );\r\n      }, */\r\n      sortFunc: customSort,\r\n      //formatter: drillDown,\r\n      formatter: (cell, row) => {\r\n        return (\r\n          <>\r\n            <Link to={`odoReadings/${row.id}`}>{row.odoNum}</Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"regNum\",\r\n      text: \"Registration\",\r\n      filter: textFilter(),\r\n    },\r\n    {\r\n      dataField: \"readingDate\",\r\n      text: \"Date\",\r\n    },\r\n    {\r\n      dataField: \"initialReading\",\r\n      text: \"Initial Reading\",\r\n    },\r\n    {\r\n      dataField: \"finalReading\",\r\n      text: \"Final Reading\",\r\n    },\r\n    {\r\n      dataField: \"mileage\",\r\n      text: \"Mileage\",\r\n    },\r\n  ];\r\n\r\n  const [odoReadings, setOdoReadings] = useState([]);\r\n\r\n  useEffect(() => {\r\n    loadOdoReadings();\r\n  }, []);\r\n\r\n  const loadOdoReadings = async () => {\r\n    const result = await axios.get(\"http://localhost:5000/odoReadings\");\r\n    // console.log(result);\r\n    //  result.data.map((item) => delete item.id);\r\n    setOdoReadings(result.data);\r\n  };\r\n\r\n  // delete odo reading\r\n  /*   const deleteOdoReading = async (id) => {\r\n    await axios.delete(`http://localhost:5000/odoReadings/${id}`);\r\n    loadOdometer();\r\n  }; */\r\n\r\n  const defaultSorted = [\r\n    {\r\n      dataField: \"odoNum\", // if dataField is not match to any column you defined, it will be ignored.\r\n      order: \"asc\", // desc or asc\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <UserAuth>\r\n      <BsTable\r\n        sObject=\"OdoReadings\"\r\n        tableTitle=\"Odometer\"\r\n        columns={columns}\r\n        tableData={odoReadings}\r\n        addButton=\"Add Reading\"\r\n        defaultSorted={defaultSorted}\r\n      />\r\n    </UserAuth>\r\n  );\r\n};\r\n\r\nexport default OdoReadings;\r\n"]},"metadata":{},"sourceType":"module"}