{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createMakeStyles = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nconst react_1 = require(\"react\");\n\nconst Object_fromEntries_1 = require(\"./tools/polyfills/Object.fromEntries\");\n\nconst objectKeys_1 = require(\"./tools/objectKeys\");\n\nconst cssAndCx_1 = require(\"./cssAndCx\");\n\nconst getDependencyArrayRef_1 = require(\"./tools/getDependencyArrayRef\");\n\nconst typeGuard_1 = require(\"./tools/typeGuard\");\n\nconst cache_1 = require(\"./cache\");\n\nconst assert_1 = require(\"./tools/assert\");\n\nconst getCounter = (() => {\n  let counter = 0;\n  return () => counter++;\n})();\n/**\n * @see {@link https://github.com/garronej/tss-react}\n */\n\n\nfunction createMakeStyles(params) {\n  const {\n    useTheme\n  } = params;\n  /** returns useStyle. */\n\n  function makeStyles(params) {\n    const {\n      name: nameOrWrappedName\n    } = params !== null && params !== void 0 ? params : {};\n    const name = typeof nameOrWrappedName !== \"object\" ? nameOrWrappedName : Object.keys(nameOrWrappedName)[0];\n    return function (cssObjectByRuleNameOrGetCssObjectByRuleName) {\n      const getCssObjectByRuleName = typeof cssObjectByRuleNameOrGetCssObjectByRuleName === \"function\" ? cssObjectByRuleNameOrGetCssObjectByRuleName : () => cssObjectByRuleNameOrGetCssObjectByRuleName;\n      const outerCounter = getCounter();\n      return function useStyles(params) {\n        const theme = useTheme();\n        const {\n          css,\n          cx\n        } = (0, cssAndCx_1.useCssAndCx)();\n        const cache = (0, cache_1.useTssEmotionCache)();\n        return (0, react_1.useMemo)(() => {\n          const refClassesCache = {};\n          const refClasses = typeof Proxy !== \"undefined\" && new Proxy({}, {\n            \"get\": (_target, propertyKey) => {\n              if (typeof propertyKey === \"symbol\") {\n                (0, assert_1.assert)(false);\n              }\n\n              return refClassesCache[propertyKey] = `${cache.key}-${outerCounter}${name !== undefined ? `-${name}` : \"\"}-${propertyKey}-ref`;\n            }\n          });\n          const cssObjectByRuleName = getCssObjectByRuleName(theme, params, refClasses || {});\n          const classes = (0, Object_fromEntries_1.objectFromEntries)((0, objectKeys_1.objectKeys)(cssObjectByRuleName).map(ruleName => {\n            const cssObject = cssObjectByRuleName[ruleName];\n\n            if (!cssObject.label) {\n              cssObject.label = `${name !== undefined ? `${name}-` : \"\"}${ruleName}`;\n            }\n\n            return [ruleName, `${css(cssObject)}${(0, typeGuard_1.typeGuard)(ruleName, ruleName in refClassesCache) ? ` ${refClassesCache[ruleName]}` : \"\"}`];\n          }));\n          (0, objectKeys_1.objectKeys)(refClassesCache).forEach(ruleName => {\n            if (ruleName in classes) {\n              return;\n            }\n\n            classes[ruleName] = refClassesCache[ruleName];\n          });\n          return {\n            classes,\n            theme,\n            css,\n            cx\n          };\n        }, [cache, css, cx, theme, (0, getDependencyArrayRef_1.getDependencyArrayRef)(params)]);\n      };\n    };\n  }\n\n  function useStyles() {\n    const theme = useTheme();\n    const {\n      css,\n      cx\n    } = (0, cssAndCx_1.useCssAndCx)();\n    return {\n      theme,\n      css,\n      cx\n    };\n  }\n\n  return {\n    makeStyles,\n    useStyles\n  };\n}\n\nexports.createMakeStyles = createMakeStyles;","map":{"version":3,"sources":["C:/Users/akau1902/Web Development/fleet-management-system/client/node_modules/tss-react/makeStyles.js"],"names":["Object","defineProperty","exports","value","createMakeStyles","react_1","require","Object_fromEntries_1","objectKeys_1","cssAndCx_1","getDependencyArrayRef_1","typeGuard_1","cache_1","assert_1","getCounter","counter","params","useTheme","makeStyles","name","nameOrWrappedName","keys","cssObjectByRuleNameOrGetCssObjectByRuleName","getCssObjectByRuleName","outerCounter","useStyles","theme","css","cx","useCssAndCx","cache","useTssEmotionCache","useMemo","refClassesCache","refClasses","Proxy","_target","propertyKey","assert","key","undefined","cssObjectByRuleName","classes","objectFromEntries","objectKeys","map","ruleName","cssObject","label","typeGuard","forEach","getDependencyArrayRef"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createMakeStyles = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst react_1 = require(\"react\");\nconst Object_fromEntries_1 = require(\"./tools/polyfills/Object.fromEntries\");\nconst objectKeys_1 = require(\"./tools/objectKeys\");\nconst cssAndCx_1 = require(\"./cssAndCx\");\nconst getDependencyArrayRef_1 = require(\"./tools/getDependencyArrayRef\");\nconst typeGuard_1 = require(\"./tools/typeGuard\");\nconst cache_1 = require(\"./cache\");\nconst assert_1 = require(\"./tools/assert\");\nconst getCounter = (() => {\n    let counter = 0;\n    return () => counter++;\n})();\n/**\n * @see {@link https://github.com/garronej/tss-react}\n */\nfunction createMakeStyles(params) {\n    const { useTheme } = params;\n    /** returns useStyle. */\n    function makeStyles(params) {\n        const { name: nameOrWrappedName } = params !== null && params !== void 0 ? params : {};\n        const name = typeof nameOrWrappedName !== \"object\"\n            ? nameOrWrappedName\n            : Object.keys(nameOrWrappedName)[0];\n        return function (cssObjectByRuleNameOrGetCssObjectByRuleName) {\n            const getCssObjectByRuleName = typeof cssObjectByRuleNameOrGetCssObjectByRuleName ===\n                \"function\"\n                ? cssObjectByRuleNameOrGetCssObjectByRuleName\n                : () => cssObjectByRuleNameOrGetCssObjectByRuleName;\n            const outerCounter = getCounter();\n            return function useStyles(params) {\n                const theme = useTheme();\n                const { css, cx } = (0, cssAndCx_1.useCssAndCx)();\n                const cache = (0, cache_1.useTssEmotionCache)();\n                return (0, react_1.useMemo)(() => {\n                    const refClassesCache = {};\n                    const refClasses = typeof Proxy !== \"undefined\" &&\n                        new Proxy({}, {\n                            \"get\": (_target, propertyKey) => {\n                                if (typeof propertyKey === \"symbol\") {\n                                    (0, assert_1.assert)(false);\n                                }\n                                return (refClassesCache[propertyKey] = `${cache.key}-${outerCounter}${name !== undefined ? `-${name}` : \"\"}-${propertyKey}-ref`);\n                            },\n                        });\n                    const cssObjectByRuleName = getCssObjectByRuleName(theme, params, refClasses || {});\n                    const classes = (0, Object_fromEntries_1.objectFromEntries)((0, objectKeys_1.objectKeys)(cssObjectByRuleName).map(ruleName => {\n                        const cssObject = cssObjectByRuleName[ruleName];\n                        if (!cssObject.label) {\n                            cssObject.label = `${name !== undefined ? `${name}-` : \"\"}${ruleName}`;\n                        }\n                        return [\n                            ruleName,\n                            `${css(cssObject)}${(0, typeGuard_1.typeGuard)(ruleName, ruleName in refClassesCache)\n                                ? ` ${refClassesCache[ruleName]}`\n                                : \"\"}`,\n                        ];\n                    }));\n                    (0, objectKeys_1.objectKeys)(refClassesCache).forEach(ruleName => {\n                        if (ruleName in classes) {\n                            return;\n                        }\n                        classes[ruleName] =\n                            refClassesCache[ruleName];\n                    });\n                    return {\n                        classes,\n                        theme,\n                        css,\n                        cx,\n                    };\n                }, [cache, css, cx, theme, (0, getDependencyArrayRef_1.getDependencyArrayRef)(params)]);\n            };\n        };\n    }\n    function useStyles() {\n        const theme = useTheme();\n        const { css, cx } = (0, cssAndCx_1.useCssAndCx)();\n        return { theme, css, cx };\n    }\n    return { makeStyles, useStyles };\n}\nexports.createMakeStyles = createMakeStyles;\n"]},"metadata":{},"sourceType":"script"}